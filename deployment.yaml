apiVersion: v1
kind: ConfigMap
metadata:
  name: liberty-config
  namespace: your-namespace
data:
  server.xml: |
    <server description="WebSphere Liberty Application Server">
        <featureManager>
            <feature>servlet-4.0</feature>
            <feature>jaxrs-2.1</feature>
        </featureManager>

        <httpEndpoint id="defaultHttpEndpoint"
                      httpPort="9080"
                      httpsPort="-1"
                      host="*" />

        <webApplication location="your-app.war" contextRoot="/" />
    </server>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: websphere-liberty
  namespace: your-namespace
  labels:
    app: websphere-liberty
spec:
  replicas: 1
  selector:
    matchLabels:
      app: websphere-liberty
  template:
    metadata:
      labels:
        app: websphere-liberty
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
        - name: websphere-liberty
          image: your-docker-registry/websphere-liberty:latest
          ports:
            - containerPort: 9080
          volumeMounts:
            - name: liberty-config
              mountPath: /config/server.xml
              subPath: server.xml
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      volumes:
        - name: liberty-config
          configMap:
            name: liberty-config
---
apiVersion: v1
kind: Service
metadata:
  name: websphere-liberty
  namespace: your-namespace
spec:
  selector:
    app: websphere-liberty
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9080
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: websphere-liberty
  namespace: your-namespace
spec:
  to:
    kind: Service
    name: websphere-liberty
  port:
    targetPort: 80
  tls:
    termination: edge
